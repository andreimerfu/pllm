name: Release Helm Charts

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Install Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.14.0

      - name: Add Helm repositories
        run: |
          helm repo add bitnami https://charts.bitnami.com/bitnami
          helm repo add dexidp https://charts.dexidp.io
          helm repo update

      - name: Update Helm dependencies
        run: |
          cd deploy/helm/pllm
          helm dependency update

      - name: Lint Helm chart
        run: |
          cd deploy/helm
          helm lint pllm

      - name: Package Helm chart
        run: |
          cd deploy/helm
          helm package pllm

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push chart to Docker Hub (OCI)
        run: |
          cd deploy/helm
          CHART_VERSION=$(helm show chart pllm | grep '^version:' | awk '{print $2}')
          helm push pllm-${CHART_VERSION}.tgz oci://registry-1.docker.io/amerfu

      - name: Install chart-releaser
        run: |
          wget https://github.com/helm/chart-releaser/releases/download/v1.6.0/chart-releaser_1.6.0_linux_amd64.tar.gz
          tar -xzf chart-releaser_1.6.0_linux_amd64.tar.gz
          sudo mv cr /usr/local/bin/cr

      - name: Package charts for GitHub Pages
        run: |
          mkdir -p .cr-release-packages
          cd deploy/helm
          helm package pllm -d ../../.cr-release-packages

      - name: Upload chart to GitHub Releases
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        run: |
          cr upload -o amerfu -r pllm --skip-existing

      - name: Update chart repository index
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        run: |
          cr index -o amerfu -r pllm -c https://amerfu.github.io/pllm --push

  publish-to-artifacthub:
    runs-on: ubuntu-latest
    needs: release
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup ArtifactHub CLI
        run: |
          curl -Lo ah https://github.com/artifacthub/hub/releases/download/v1.16.0/ah_1.16.0_linux_amd64
          chmod +x ah
          sudo mv ah /usr/local/bin/

      - name: Create ArtifactHub metadata
        run: |
          cat > artifacthub-pkg.yml << EOF
          version: ${GITHUB_REF#refs/tags/v}
          name: pllm
          displayName: PLLM
          createdAt: $(date -u +%Y-%m-%dT%H:%M:%S.%fZ)
          description: A Helm chart for PLLM (Proxy for LLM) - Multi-provider LLM proxy with authentication, budgeting, and analytics
          logoURL: https://raw.githubusercontent.com/amerfu/pllm/main/docs/logo.png
          digest: $(cd deploy/helm && helm package pllm --dependency-update | grep 'digest:' | awk '{print $2}')
          license: MIT
          homeURL: https://github.com/amerfu/pllm
          appVersion: ${GITHUB_REF#refs/tags/v}
          containersImages:
            - name: pllm
              image: amerfu/pllm:${GITHUB_REF#refs/tags/v}
          keywords:
            - llm
            - proxy
            - ai
            - openai
            - anthropic
            - authentication
          links:
            - name: Chart Source
              url: https://github.com/amerfu/pllm/tree/main/deploy/helm/pllm
            - name: Docker Hub
              url: https://hub.docker.com/r/amerfu/pllm
          maintainers:
            - name: PLLM Team
              email: support@pllm.dev
          provider:
            name: amerfu
          EOF

      - name: Publish to ArtifactHub
        env:
          AH_TOKEN: ${{ secrets.ARTIFACTHUB_TOKEN }}
        run: |
          if [ -n "$AH_TOKEN" ]; then
            ah push --kind helm --package-url https://github.com/amerfu/pllm/releases/download/${GITHUB_REF#refs/tags/}/pllm-${GITHUB_REF#refs/tags/v}.tgz
          else
            echo "ARTIFACTHUB_TOKEN not set, skipping ArtifactHub publish"
          fi