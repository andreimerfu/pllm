# Automatic Release (triggered by tags)
# This workflow is triggered when tags are pushed (usually by manual-release.yml)
name: Release

on:
  push:
    tags:
      - "v*.*.*"
      - "v*.*.*-*"

jobs:
  validate-release:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    outputs:
      tag_name: ${{ steps.get_tag.outputs.tag_name }}
    steps:
      - name: Get tag name
        id: get_tag
        run: |
          TAG_NAME=${GITHUB_REF#refs/tags/}
          echo "tag_name=$TAG_NAME" >> $GITHUB_OUTPUT
          echo "Processing release for tag: $TAG_NAME"

  build-and-push-docker:
    needs: validate-release
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: |
            web/package-lock.json
            docs/package-lock.json

      - name: Install frontend dependencies
        run: cd web && npm ci

      - name: Install docs dependencies
        run: cd docs && npm ci

      - name: Build frontend
        run: cd web && npm run build

      - name: Copy frontend build for Go embed
        run: |
          mkdir -p internal/ui/dist
          cp -r web/dist/* internal/ui/dist/

      - name: Build docs
        run: cd docs && npm run build

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.23"

      - name: Generate Swagger docs
        run: |
          go install github.com/swaggo/swag/cmd/swag@latest
          swag init -g cmd/server/main.go -o internal/handlers/swagger

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: amerfu/pllm
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=raw,value=latest

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  release-helm:
    needs: [validate-release, build-and-push-docker]
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pages: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Install Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.14.0

      - name: Add Helm repositories
        run: |
          helm repo add bitnami https://charts.bitnami.com/bitnami
          helm repo add dexidp https://charts.dexidp.io
          helm repo update

      - name: Update chart version
        run: |
          cd deploy/helm/pllm
          VERSION=${{ needs.validate-release.outputs.tag_name }}
          VERSION=${VERSION#v}
          sed -i "s/^version:.*/version: ${VERSION}/" Chart.yaml
          sed -i "s/^appVersion:.*/appVersion: \"${VERSION}\"/" Chart.yaml
          helm dependency update

      - name: Package Helm chart
        run: |
          cd deploy/helm
          helm package pllm

      - name: Login to Docker Hub for OCI
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push chart to Docker Hub (OCI)
        run: |
          cd deploy/helm
          VERSION=${{ needs.validate-release.outputs.tag_name }}
          VERSION=${VERSION#v}
          helm push pllm-${VERSION}.tgz oci://registry-1.docker.io/amerfu

      - name: Install chart-releaser
        run: |
          wget https://github.com/helm/chart-releaser/releases/download/v1.6.0/chart-releaser_1.6.0_linux_amd64.tar.gz
          tar -xzf chart-releaser_1.6.0_linux_amd64.tar.gz
          sudo mv cr /usr/local/bin/cr

      - name: Package charts for GitHub Pages
        run: |
          mkdir -p .cr-release-packages
          cd deploy/helm
          helm package pllm -d ../../.cr-release-packages

      - name: Upload chart to GitHub Releases
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        run: |
          cr upload -o amerfu -r pllm --skip-existing

      - name: Update chart repository index
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        run: |
          cr index -o amerfu -r pllm -c https://amerfu.github.io/pllm --push

  notify:
    needs: [validate-release, build-and-push-docker, release-helm]
    runs-on: ubuntu-latest
    steps:
      - name: Notify Slack
        if: ${{ secrets.SLACK_WEBHOOK_URL }}
        uses: 8398a7/action-slack@v3
        with:
          status: success
          fields: repo,message,commit,author,action,eventName,ref,workflow
          text: |
            ðŸŽ‰ New PLLM release ${{ needs.validate-release.outputs.tag_name }} is available!

            ðŸ“¦ Docker Image: `amerfu/pllm:${{ needs.validate-release.outputs.tag_name }}`
            ðŸ“Š Helm Chart: `helm install pllm oci://registry-1.docker.io/amerfu/pllm --version ${{ needs.validate-release.outputs.tag_name }}`
            ðŸ“‹ Release Notes: https://github.com/andreimerfu/pllm/releases/tag/${{ needs.validate-release.outputs.tag_name }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
