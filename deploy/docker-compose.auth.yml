version: '3.8'

services:
  # Dex Identity Provider
  dex:
    image: ghcr.io/dexidp/dex:v2.37.0
    container_name: pllm-dex
    ports:
      - "5556:5556"  # Dex HTTP
      - "5557:5557"  # Dex gRPC
      - "5558:5558"  # Dex telemetry
    volumes:
      - ./dex/config.yaml:/etc/dex/config.yaml:ro
      - dex-data:/var/dex
    environment:
      - GITHUB_CLIENT_ID=${GITHUB_CLIENT_ID}
      - GITHUB_CLIENT_SECRET=${GITHUB_CLIENT_SECRET}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - LDAP_ADMIN_PASSWORD=${LDAP_ADMIN_PASSWORD}
    command: ["dex", "serve", "/etc/dex/config.yaml"]
    networks:
      - pllm-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:5556/dex/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3

  # PostgreSQL for PLLM (user, team, and key management)
  postgres:
    image: postgres:15-alpine
    container_name: pllm-postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: pllm
      POSTGRES_USER: pllm
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-pllm_secure_password}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - pllm-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U pllm"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching and rate limiting
  redis:
    image: redis:7-alpine
    container_name: pllm-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redis_secure_password}
    volumes:
      - redis-data:/data
    networks:
      - pllm-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # PLLM Service
  pllm:
    build:
      context: ..
      dockerfile: Dockerfile
    container_name: pllm-service
    ports:
      - "8080:8080"  # Main API
      - "8081:8081"  # Admin API
      - "9090:9090"  # Metrics
    environment:
      # Database
      DATABASE_URL: postgres://pllm:${POSTGRES_PASSWORD:-pllm_secure_password}@postgres:5432/pllm?sslmode=disable
      REDIS_URL: redis://:${REDIS_PASSWORD:-redis_secure_password}@redis:6379/0
      
      # Authentication
      MASTER_KEY: ${MASTER_KEY:-sk-master-change-this-in-production}
      JWT_SECRET: ${JWT_SECRET:-change-this-secret-in-production}
      JWT_ISSUER: pllm
      
      # Dex SSO
      DEX_ISSUER: http://dex:5556/dex
      DEX_CLIENT_ID: pllm-web
      DEX_CLIENT_SECRET: pllm-client-secret
      DEX_REDIRECT_URL: http://localhost:8080/auth/callback
      
      # LLM Providers
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY}
      
      # Logging
      LOG_LEVEL: info
      
      # Features
      ENABLE_CACHE: true
      ENABLE_RATE_LIMIT: true
      ENABLE_METRICS: true
      ENABLE_ADMIN_UI: true
    volumes:
      - ./config.yaml:/etc/pllm/config.yaml:ro
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      dex:
        condition: service_healthy
    networks:
      - pllm-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Admin UI (React)
  admin-ui:
    build:
      context: ../web
      dockerfile: Dockerfile
    container_name: pllm-admin-ui
    ports:
      - "3000:3000"
    environment:
      VITE_API_URL: http://localhost:8080
      VITE_ADMIN_API_URL: http://localhost:8081
      VITE_DEX_URL: http://localhost:5556/dex
      VITE_DEX_CLIENT_ID: pllm-web
    depends_on:
      - pllm
    networks:
      - pllm-network
    restart: unless-stopped

volumes:
  postgres-data:
  redis-data:
  dex-data:

networks:
  pllm-network:
    driver: bridge